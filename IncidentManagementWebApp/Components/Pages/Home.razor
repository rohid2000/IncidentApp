@page "/"
@using IncidentManagementWebApp.Interfaces
@using IncidentManagementWebApp.Services
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject UserStateService UserStateService

<h3>Log in om gemelde incidenten te beheren</h3>

<form method="post" @onsubmit="HandleValidSubmit" @formname="login-form">
    <AntiforgeryToken />
    <div class="form-group">
        <label for="username">Gebuikersnaam:</label>
        <br />
        <InputText @bind-Value="Model!.Username" type="text" required/>
    </div>

    <div class="form-group">
        <label for="password">Wachtwoord:</label>
        <br />
        <InputText @bind-Value="Model!.Password" type="password" required />
    </div>

    <button type="submit" class="btn btn-primary mt-3">Inloggen</button>
</form>

@code {
    [SupplyParameterFromForm]
    private LoginModel? Model { get; set; } = new();

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7015/api/login", Model);

            if (response.IsSuccessStatusCode)
            {
                IUser currentUser = await response.Content.ReadFromJsonAsync<IUser>();

                UserStateService.currentUser = currentUser;

                if (currentUser.isAdmin)
                {
                    NavigationManager.NavigateTo("/management");
                }
                else
                {
                    NavigationManager.NavigateTo("/userlogin");
                }
            }
            else
            {
                Console.WriteLine("Login failed. Please check your credentials.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }

    public class LoginModel
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}